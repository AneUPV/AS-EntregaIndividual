#############################################################################
#                        docker-compose.yml - NATS                          #
#############################################################################

# Versión
version: '3'

# En el apartado ‘services’ se definirán los contenedores a crear 
services:

  # Contenedor que alojará el servidor NATS - La propia imagen de 
  # DockerHub tiene un servidor NATS  
  servidor-nats:
    # Dar nombre al contenedor
    container_name: servidor-nats
    # Imagen para ejecutar el contenedor
    image: nats
    # Política de reinicio: Reiniciar contenedor en caso de error
    # Se interpreta error cuando el código de finalización del
    # proceso es superior a 0.
    restart: on-failure
    # Mapeo de puertos
    ports:
     - "4222:4222"


################################################################ 
 
  # Contenedor que aloja el cliente Python PUBLISHER de NATS 
  # - Este se suscribe y ENVÍA mensajes a un tópico [PUBLISHER] 
  pub-cliente-nats: 
    # Dar nombre al contenedor
    container_name: pub-cliente-nats 
    # Reiniciar si el contenedor finaliza con un error. 
    # Se interpreta error cuando el código de finalización del
    # proceso es superior a 0.
    restart: on-failure
    # Imagen para ejecutar el contenedor. En este caso se
    # utiliza el dockerfile definido en el path de 'context'
    # y con el nombre 'Dockerfile'
    build: 
      context: ./DOCKERFILE_pub/ 
      dockerfile: Dockerfile
    # Indicar que depende de que 'servidor-nats' esté creado 
    depends_on: 
      - servidor-nats
    # El volumen que utiliza es 'volumenNats' y se accede a 
    # él desde el directorio /logNats del contenedor
    volumes:
      - volumenNats:/logNats 
 
 ###########################################################################
  
  # Contenedor que aloja el cliente Python SUBSCRIBER de NATS 
  # - Este se suscribirá y LEERÁ mensajes a un tópico [SUBSCRIBER]
  sub-cliente-nats:
    # Dar nombre al contenedor
    container_name: sub-cliente-nats
    # Reiniciar si el contenedor finaliza con un error. 
    # Se interpreta error cuando el código de finalización del
    # proceso es superior a 0.
    restart: on-failure
    
    # Imagen para ejecutar el contenedor. En este caso se
    # utiliza el dockerfile definido en el path de 'context'
    # y con el nombre 'Dockerfile'
    build:
      context: ./DOCKERFILE_sub/
      dockerfile: Dockerfile
    # Indicar que depende de que 'servidor-nats' esté creado 
    depends_on:
      - servidor-nats
    # El volumen que utiliza es 'volumenNats' y se accede a 
    # él desde el directorio /logNats del contenedor
    volumes:
      - volumenNats:/logNats
##################################################################
# Añadir una sección 'volumes' con el nombre del volumen
volumes:
  volumenNats: 

##################################################################
