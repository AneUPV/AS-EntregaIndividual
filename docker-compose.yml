services:
  # Contenedor que alojará el servidor NATS - La propia imagen de 
  # DockerHub tiene un servidor NATS  
  servidor-nats:
    # Dar nombre al contenedor
    container_name: servidor-nats
    # Imagen para ejecutar el contenedor
    image: nats
    # Política de reinicio: Reiniciar contenedor en caso de error
    restart: on-failure
    # Mapeo de puertos
    ports:
     - "4222:4222"
     - "6222:6222"
     - "8222:8222"
    networks:
      NATS:
        ipv4_address: 172.16.238.20

        #networks:
        #NATS:
        #ipam:
        #config:
        #- subnet: 172.16.238.0/24

###################################################################

  # Contenedor que alojará el cliente Python de NATS - Este
  # se suscribirá y LEERÁ mensajes a un tópico [SUBSCRIBER]
  sub-cliente-nats:
    container_name: sub-cliente-nats
    restart: on-failure
    build:
      context: ./DOCKERFILE_sub/
      dockerfile: Dockerfile
      #depends_on:
      #- servidor-nats
    # Mapeo de puertos
    #ports:
    #- "4222:4222"
    #- "6222:6222"
    #- "8222:8222"
    # Crear el contenedor en la red 'redNATS'
    networks:
      NATS:
        ipv4_address: 172.16.238.21


################################################################

  # Contenedor que alojará el cliente Python de NATS - Este
  # se suscribirá y ENVIARÁ mensajes a un tópico [PUBLISHER]
  pub-cliente-nats:
    container_name: pub-cliente-nats
    restart: on-failure
    build:
      context: ./DOCKERFILE_pub/
      dockerfile: Dockerfile
      #depends_on:
      #- servidor-nats
    # Mapeo de puertos
    #ports:
    #- "4222:4222"
    #- "6222:6222"
    #- "8222:8222"
    # Crear el contenedor en la red 'redNATS'
    networks:
      NATS:
        ipv4_address: 172.16.238.22
        #networks:
        #NATS:
        #ipam:
        #config:
        #- subnet: 172.16.238.0/24
networks: 
  NATS: 
    ipam: 
      config: 
        - subnet: 172.16.238.0/24 
 

##################################################################
